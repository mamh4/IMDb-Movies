---
title: "Arno"
format: html
editor: visual
---

########################################################################################################################## 

########################################################################################################################## 

########################################################################################################################## 

```{r}
#loading libraries...

library(tibble)
library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(forcats)
library(stringr)
library(tidyverse)
```

```{r}
#load("data/full_movies_v1.RData")
#load("data/cleaned_data/full_IMDb_Scrape.RData")
#df_cert_clean <- movies |> 
#  mutate(certificate = sub("[\\\n].*",NA, certificate)) |> 
#  select(certificate) |> 
#  group_by(certificate) |> 
#  summarise(count = n())
#
# movies <- movies |> 
#   mutate(certificate = sub("[\\\n].*",NA, certificate)) |> 
#   mutate(certificate = as.factor(str_squish(certificate))) |>
#   mutate(certificate = fct_recode(certificate, 
#                                   "0" = "Approved",
#                                   "0" = "G",
#                                   "0" = "GP",
#                                   "0" = "M",
#                                   "0" = "M/PG",
#                                   "18" = "NC-17", 
#                                   NULL = "Not Rated",
#                                   "0" = "PG",
#                                   "13" = "PG-13", 
#                                   "0" = "Passed",
#                                   "R" = "R", # depending on the year of release of the movie the certificate corresponds to a different age, it will be dealt with in a later function.
#                                   NULL = "Unrated",
#                                   "17" = "X"))
#
# certificate_to_age <- function(cert, year){
#   new_cert_vect = cert # initializing a new vector with the value of certificate
#   for (i in 1:length(cert)){
#       if(is.na(year[i]) | is.na(cert[i])){next} # skipping to next loop if either value is NA
#     
#       if(year[i]>=1970 & cert[i] == "R"){ # modifying the certificate value "R" to 17 if the year is above 1970
#         new_cert_vect[i]="17"
#       }
#       else if (year[i]<1970 & cert[i] == "R"){
#         new_cert_vect[i]="16"
#       }
#   }
#   return(new_cert_vect)  
# }
```

```{r message=TRUE}
# movies <- movies |>
#   mutate(certificate = certificate_to_age(certificate,year)) 
# 
#                               levels = c("0", "6", "7", "8", "9", "10", "12", "13", "14", "16", "17", "18", NULL))
#                               
# #reordering the levels so they are in ascending order.
# 
# #cert_df <- movies |> select(certificate) |> group_by(certificate) |> summarise(count = n()) 
```

## Data Explo Section + Analysis on Competition in recent times

```{r Competition Inc}
# movies |> 
#   group_by(year) |>
#   ggplot(mapping = aes(x = year, y = )) + geom_bar()

```

## Genre section

```{r Genre DF}
# 
# movies_genre_extended <- movies |>
#   separate_rows(genre, sep = ",\\s*") |>
#   mutate(genre = str_squish(genre))
# 
# 
# # genreList <- unique(unlist(strsplit(str_squish(unique(movies$genre) ),"," ))) # to have an idea of the genres in the dataset
```

```{r}
# 
# df_genre_sum <- movies_genre_extended |>
#   group_by(genre) |>
#   filter(n()>=0) |>
#   summarise( counted = sum(n())) |>
#   arrange(counted)
#
#ggplot(data = df_genre_sum,mapping = aes( x = reorder(genre,desc(counted)), y = counted ))+
#  geom_bar(stat = "identity") +
#  labs( x = "Genre",
#        y = "Sum") +
#  annotate("text",8 , 130000, label = "Top Movie Genres", vjust = "top", hjust = "right")
#
# movies_genre_extended |>
#   select(genre,gross) |>
#   group_by(genre) |>
#   summarise(SumGrossByGenre = sum(gross,na.rm=T),
#             counted = sum(n())) |>
#   mutate(MeanGross = SumGrossByGenre/counted) |>
#   #filter(MeanGrossByGenre >= 300000000) |>
#   ggplot( mapping = aes( x = reorder(genre, desc(MeanGross)) , y = MeanGross)) + geom_bar(stat = "identity") + labs( x = "Genre")
```

## Genre Analysis Section

```{r Analysis : Genre}
  # movies |>
  #   #filter(genre != "Adult" & genre != "News" & genre != "Reality-TV" & genre != "Talk-Show") |>
  #   group_by(genre,year) |>
  #   summarise(MeanGross = mean(gross_CPI_adjusted , na.rm = T)) |>
  #   ggplot(aes( x = year, y = MeanGross)) + 
  #     geom_point() +
  #     geom_smooth() +
  #     theme(axis.ticks.x = element_blank(),
  #           axis.text.x=element_blank()) +
  #     facet_grid(~genre) +
  #     labs(title = "Action, Adventure, Fantasy & Sci-Fi, hold the best Gross result in modern times",
  #          subtitle = "On the other hand genres like War, History, Music & Sport seem to have stagnated", 
  #          x = "Year for each genre (1920-2023)",
  #         y = " Mean Gross") +
  #   scale_y_continuous(limits = c(10,NA),oob = squish)
```

```{r Analysis : Genre bis}
# suppressWarnings({
#   movies |>
#     group_by(genre,year) |>
#     summarise(TotalGross = sum(gross_CPI_adjusted,na.rm = T),
#               .groups = "keep") |>
#     ggplot(aes( x = year, y = TotalGross)) + 
#       geom_point() +
#       geom_smooth(formula = y ~ x, method = "loess") +
#       theme(axis.ticks.x = element_blank(),
#             axis.text.x=element_blank()) +
#       facet_grid(~genre) +
#       labs(title = "Current best genres to make a movie in are Action, Adventure & Comedy.",
#            subtitle = "On the other hand genres like War, History, Music & Sport seem to have stagnated / decresed in popularity.", 
#            x = "Year for each genre (1920-2023)",
#           y = "Total Gross") +
#     scale_y_continuous(limits = c(0,NA),oob = squish)
# })
```

```{r Analysis : Genre & Profit }
suppressWarnings({
  movies |>
    group_by(genre , year) |>
    summarise(TotalProfit = sum(profit_CPI_adjusted , na.rm = T),
              .groups = "keep") |>
    ggplot(aes( x = year, y = TotalProfit)) + 
      geom_point() +
      geom_smooth(formula = y ~ x, 
                  method = "loess") +
      theme(axis.ticks.x = element_blank(), #removing the years values, as it would be too cluttered in this format
            axis.text.x = element_blank()) +
      facet_grid(~genre) +
      labs(title = "Current best genres to make a movie in are Action, Adventure & Comedy.",
           subtitle = "On the other hand genres like War, History, Western & Sport seem to have stagnated / decresed\nin popularity.", 
           x = "Year for each genre (1920-2023)",
           y = "Yearly total profit") +
      scale_y_continuous(limits = c(0 , 4e+10), oob = squish)
})
```

The graphical representation clearly indicates that Action, Adventure, and Comedy are the most prevalent and lucrative genres within the realm of filmmaking. Consequently, these categories hold great promise for filmmakers seeking commercial success. Conversely, genres such as Horror, Thriller, and Sci-Fi exhibit an emerging popularity and offer studios a promising avenue for exploration.

The genre of Drama, with its intrinsic ability to intermingle with various other genres, naturally mirrors the trends set by these other categories. This adaptability allows it to remain a pertinent genre in alignment with evolving audience preferences.

In examining the less profitable genres, it is discernible that the War genre has witnessed a decline in popularity since the mid-20th century, conceivably due to its waning relevance as a subject matter in contemporary times. In the case of History, it appears that the market has reached a point of saturation, as the vast majority of significant historical events have been exhaustively documented. Genres like Biography and Western, by contrast, occupy a niche space within the cinematic landscape, appealing to a more limited audience segment and consequently offering diminished potential for trending success.

The overarching conclusion drawn from this analysis is that genres such as Action, Adventure, and Comedy notably enhance the prospects of achieving financial success in the realm of filmmaking.

## Attention Span Section

```{r}
# A_span <- movies |>                 # to have an idea of which runtime bins there are & in which proportion
#   filter(run_time >0 ) |>
#   mutate(runtime_bins = run_time %/% 60) |>
#   group_by(runtime_bins) |>
#   summarise(count = n())
```

```{r Creating : Runtime Bins dataframe}
# | out-width: 
Runtime_lenght_bins_df <- movies |> 
  filter(run_time > 0) |>
  mutate(runtime_bins = as.factor(run_time %/% 60)) |>
  mutate(runtime_bins = fct_recode(runtime_bins,
                                   "Very Short" = "0", # up to 59 min
                                   "Short" = "1",      # 60-119 min 
                                   "Average" = "2",    # 120-179 min
                                   "Long" = "3",       # up to 4h 
                                   "Very Long" = "4",  # up to 5h and more...
                                   "Very Long" = "5",
                                   "Very Long" = "6",
                                   "Very Long" = "7")) |>
  select(title , year , run_time , runtime_bins , gross_CPI_adjusted ,
         rating , metascore , genre) |>
  distinct(title , .keep_all = TRUE)
```

```{r}
# A_span_2 <- Runtime_lenght_bins_df |>                 # to have an idea of which runtime bins there are & in which proportion
#   group_by(runtime_bins) |>
#   summarise(count = n())

```

```{r}
# overalllook<-Runtime_lenght_bins_df |>
#   select(runtime_bins,year,rating) |>
#   #group_by(year) |>
#   #summarise(AVG_rating_trend = mean(rating, na.rm = T)) |> ungroup() |>
#   group_by(runtime_bins,year) |>
#   summarise(AVG_rating_excl_trend = mean(rating, na.rm = T), .groups = "keep") |>
#   ggplot(aes( x = year , y = AVG_rating_excl_trend)) +
#   geom_point(aes(shape = runtime_bins, color = runtime_bins)) +
#   geom_smooth(aes(color = runtime_bins), se =FALSE) +
#   labs(title = "Attention span seem to decrese over time",
#        subtitle = "Although long movies seem to generate better ratings in recent years, one must bear in mind\nthat they have the largest standard deviation among the other categories",
#        x = "Year",
#        y = "Average Rating",
#        color = "Runtime",
#        shape = "Runtime") +
#   coord_cartesian(xlim = c(1915,2025)) +
#   scale_x_continuous(breaks = seq(1915,2025,6)) +
#   theme(axis.text.x = element_text(angle = 45, hjust=1),
#         legend.position = "bottom")

```

```{r Creating : rating_joined_runtime_df}
yearly_avg_rating_df <- Runtime_lenght_bins_df |>
  select(year,rating,genre) |>
  group_by(year) |>
  summarise(yearly_AVG_rating = mean(rating , na.rm = T))

bin_avg_rating_df<-Runtime_lenght_bins_df |>
  select(runtime_bins,year,rating,genre) |>
  group_by(runtime_bins,year) |>
  summarise(bin_AVG_rating = mean(rating , na.rm = T), 
            .groups = "drop")

rating_joined_runtime_df <- left_join(bin_avg_rating_df , yearly_avg_rating_df,
                               join_by(year))
```

```{r Creating rating_joined_df_with_genre}
yearly_avg_rating_by_genre <- Runtime_lenght_bins_df |>
  select(year , rating , genre) |>
  group_by(year , genre) |>
  summarise(yearly_AVG_rating = mean(rating , na.rm = T),
            .groups = "drop")

bin_avg_rating_by_genre <- Runtime_lenght_bins_df |>
  select(runtime_bins , year , rating , genre) |>
  group_by(runtime_bins , year , genre) |>
  summarise(bin_AVG_rating = mean(rating , na.rm = T), 
            .groups = "drop")

rating_joined_df_with_genre <- left_join(bin_avg_rating_by_genre , 
                                  yearly_avg_rating_by_genre,
                                  join_by(year , genre))
```

```{r Analysis : Rating deviation trend}
suppressWarnings({print(
  rating_joined_df_with_genre |>
  group_by(runtime_bins,genre,year) |>
  #filter(genre != "Western"& genre !="Thriller" & genre !="Crime",genre !="Drama",genre !="Family",genre !="Biography", genre !="Musical") |>
  summarise(AVG_rating_excl_trend = yearly_AVG_rating - bin_AVG_rating,
            .groups = "keep") |>
  ggplot(aes( x = year , y = AVG_rating_excl_trend)) +
    geom_smooth(aes(color = genre), se =FALSE,
                formula = y ~ x, method = "loess") +
    labs(title = "Could attention span be the reason of the decrese in ratings ?",
         subtitle = "Action, Adventure & Comedy seem to rise again. Sci-Fi, Romance & Mystery remained constant.",
         x = "Year",
         y = "Average rating deviation trend",
         color = "Genre") +
    coord_cartesian(xlim = c(1915 , 2025)) +
    scale_x_continuous(breaks = seq(1915 , 2025 , 6)) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1),
          legend.position = "bottom")
)})

```
This graphic provides an illustrative depiction of the annual average rating deviation from the normative rating associated with specific run-time intervals. Notably, there has been a discernible decline in movie ratings since the 1970s. This decline may be attributed to a variety of factors, such as a decreasing collective attention span or elevated expectations regarding the optimal duration of a movie.

This intriguing trend is pervasive across multiple genres, with adventure and comedy experiencing a resurgence in recent years. This resurgence is in alignment with our prior observations when assessing genre-specific profitability trends.

In contrast, genres such as Sci-Fi, Mystery, and Romance have maintained a consistent trajectory over the years. One plausible explanation for this constancy is the niche appeal of these genres, catering to dedicated fan bases with specific expectations regarding both content and duration. As a result, these genres tend to exhibit more stability in their ratings over time.

<!-- This graphic represents the yearly average rating deviation form the average rating linked to the run time bins. -->
<!-- There is a decrease in ratings overtime since the 70's. This phenomenon could be explained by the attention span decreasing or that individuals expect to much from certain movie lengths. -->
<!-- This trend affects nearly all genres, although adventure & Comedy seem to have a comeback in recent years. This finding backs the results found when analyzing the profit by genre.  -->
<!-- Genres like Sci-Fi, Mystery & Romance seem to have remained constant over the years. One reason for this could be that those are "niche" categories, only dedicated fan base would go watch the said movie. Furthermore the audience would probably already expects a certain duration from those movies. -->

```{r Analysis : Attention span}
rating_joined_runtime_df |>
  group_by(runtime_bins,year) |>
  summarise(AVG_rating_excl_trend = yearly_AVG_rating - bin_AVG_rating,
            .groups = "keep") |>
  ggplot(aes( x = year , y = AVG_rating_excl_trend)) +
    geom_point(aes(shape = runtime_bins,
                   color = runtime_bins)) +
    geom_smooth(aes(color = runtime_bins), se =FALSE,
                formula = y ~ x,
                method = "loess") +
    labs(title = "Attention span seem to decrese over time.",
         subtitle = "Films between 60 to 120 min seem to have gained popularity.",
         x = "Year",
         y = "Average Rating Excluding the trend",
         color = "Run time",
         shape = "Run time") +
    coord_cartesian(xlim = c(1915 , 2025)) +
    scale_x_continuous(breaks = seq(1915 , 2025 , 6)) +
    theme(axis.text.x = element_text(angle = 45, hjust=1),
          legend.position = "bottom")
```

Upon eliminating the influence of rating trend deviations, a more evident pattern emerges. Notably, the majority of run-time categories exhibit a negative impact on movie ratings, with one notable exception being the category encompassing movies with a run time falling between 60 and 119 minutes, denoted as "Short" run time in the graphic.

The extensive rating fluctuations observed in very short movies are, in all likelihood, an outcome of overfitting stemming from a limited dataset. Moreover, the persistently negative trend observed in this category from the 1980s onward may be attributed to the audience's perception that such brief cinematic experiences lack the closure and satisfaction characteristic of full-length films, which are typically longer than an hour. It is worth noting that these very short movies may predominantly attract dedicated movie enthusiasts, who tend to be more discerning in their assessments. Furthermore, mainstream audiences may not regard films lasting less than one hour as constituting "proper" cinematic experiences. According to the data, it is not advisable to produce "Very Short" movies, although further investigation is warranted to solidify this assertion.

In light of these findings, we can deduce that the optimal duration for achieving the highest ratings, as perceived by the audience, falls within the range of 60 to 119 minutes. This revelation offers an additional metric for evaluating a movie's success from the perspective of its reception by viewers.

("Very Short" : 0-59min, "Short" : 60-119min, "Average" : 120-179min, "Long" : 180-239min, "Very Long" : 4h & more ) 

<!-- After removing the rating trend deviation, the answer seem more obvious. Nearly all run time categories impacted negatively the ratings, except if the movie's run time was between 60 & 119 minutes (in the graphic labeled as "Short" Run time). -->
<!-- Very short movies seem to have massive fluctuations, this is the result of over fitting due to lack of data points. A reason why it remains below 0 in the 80's & onward might be because the audience doesn't feel rewarded by a proper film closure (as the movies are less than 1h). Also only dedicated movie goers might watch those very short movies & thus are more critical. General audiences might also not consider films lasting less than 1 hour as "proper" movies. According to the data the it is not recommended to make a very short movie, but more testing needs to be made. -->

<!-- So, we can conclude that to get the best performances rating wise would be to have a movie between 60 to 119 minutes. -->
<!-- This result can be another metric for the success of a movie in the audience eyes. -->


```{r}
# rating_joined_runtime_df |>
#   #select(runtime_bins,year,rating) |>
#   #group_by(year) |>
#   #summarise(AVG_rating_trend = mean(rating, na.rm = T)) |> ungroup() |>
#   group_by(runtime_bins,year) |>
#   summarise(AVG_rating_excl_trend = yearly_AVG_rating-bin_AVG_rating) |>
#   ggplot(aes( x = year , y = AVG_rating_excl_trend)) +
#   geom_point(aes(shape = runtime_bins, color = runtime_bins)) +
#   geom_smooth(aes(color = runtime_bins), se =FALSE) +
#   labs(title = "Attention span seem to decrese over time",
#        subtitle = "Although long movies seem to generate better ratings in recent years, one must bear in mind\nthat they have the largest standard deviation among the other categories",
#        x = "Year",
#        y = "Average Rating",
#        color = "Runtime",
#        shape = "Runtime") +
#   coord_cartesian(xlim = c(1915,2025)) +
#   scale_x_continuous(breaks = seq(1915,2025,6)) +
#   theme(axis.text.x = element_text(angle = 45, hjust=1),
#         legend.position = "bottom")
```

```{r}
# movies |> 
#   filter(run_time >0) |>
#   mutate(runtime_bins = as.factor(run_time %/% 60)) |>
#   select(title,year,runtime_bins,gross_CPI_adjusted) |>
#   distinct(title, .keep_all = TRUE) |>
#   select(runtime_bins,year,gross_CPI_adjusted)|>
#   group_by(runtime_bins,year)|>
#   summarise(AVG_gross = mean(gross_CPI_adjusted,na.rm = T))|>
#   ggplot(aes(x = year, y = AVG_gross))+
#   geom_point(aes(shape = runtime_bins, color = runtime_bins))+
#   geom_smooth(aes(color = runtime_bins), se =FALSE) +
#   labs(title = "Short & average lenght films have slight increase in gross each year",
#        subtitle = "Long movies have the most potential, but it is either a hit or a miss",
#        x = "Year",
#        y = "Average Gross",
#        color = "Runtime Bins",
#        shape = "Runtime Bins") +
#   coord_cartesian(xlim = c(1900,2025), ylim = c(-10,3.5e+08))
# ggplot(data = Runtime_Lenght_df , mapping = aes( x = Runtime_bins , y = gross, color = year )) +
#   geom_point()
# Runtime_lenght_bins_df |> 
#   select(runtime_bins,year,gross_CPI_adjusted,votes) |>
#   group_by(runtime_bins,year) |>
#   summarise(avggross = mean(gross_CPI_adjusted,na.rm = T),
#             avgvotes = mean(votes)) |>
#   ggplot(aes(x = year , y = avgvotes)) +
#   geom_point() + geom_smooth() +
#   facet_grid(~runtime_bins)

```

```{r}
# Runtime_lenght_bins_df_90_180min <- movies |> 
#   filter(run_time >=180 & run_time <= 240) |>
#   mutate(runtime_bins = as.factor((run_time-180) %/% 15)) |>
#   mutate(runtime_bins = fct_recode(runtime_bins,
#                                    "180-194" = "0",    #  less than 2h
#                                    "195-209" = "1",    # 2h-3h more or less
#                                    "210-124" = "2",
#                                    "125-240" = "3"))    # up to 3h (180min)
#                                    
# # In dept analysis on movies with runtimes between 90 & 180 mins...
# 
# closerlook <-Runtime_lenght_bins_df_90_180min |>
#   select(runtime_bins,year,gross_CPI_adjusted,rating) |>
#   group_by(runtime_bins,year) |>
#   summarise(AVG_rating = mean(rating, na.rm = T), .groups = "keep") |>
#   #summarise(AVG_gross = mean(gross_CPI_adjusted, na.rm = T), .groups = "keep") |>
#   filter(AVG_rating>=0) |>
#   ggplot(aes( x = year , y = AVG_rating)) +
#   geom_point(aes(shape = runtime_bins, color = runtime_bins))+
#   geom_smooth(aes(color = runtime_bins), se =FALSE) +
#   labs(title = "Taking a closer look on movies with lenght 100-180min",
#        subtitle = "Safe bet would be arround 130min, it has the lowest standard error",
#        x = "Year",
#        y = "Average Gross",
#        color = "Runtime",
#        shape = "Runtime") +
#   annotate("text",x = 1970, y = 7e+08, vjust = "top", hjust = "center", label = "Correlation between lenght & gross volatility
#            seem to play a role for movies" ) +
#   coord_cartesian(xlim = c(1915,2025), ylim = c(5,9)) +
#   scale_x_continuous(breaks = seq(1915,2025,6)) +
#   theme(axis.text.x = element_text(angle = 45, hjust=1),
#         legend.position = "bottom")
# 
# (overalllook | closerlook)
# All run time bins seem to have a small constant decrease for quite some time now. This could be explained by the attention span decreasing or that people expect to much for certain movie lengths.
# 
# The only exception to the above mentioned trend is the Long bin category. Tho one must note that it has the biggest standard error.
# 
# subtract avg or divide the avg rating in the y axis avg deviation of the mean
# 
# The upward trend of the Long bin could be explained by dedicated watchers going to movie theaters & that already expect a long run time. Thus are already commited to watch it & would not be surprised by the length. Very Short movies have a lot of volatility in the ratings over the years. Not a lot of individuals are probably going to watch such movies in theater or even consider them proper movies when they last less than 60min. It would explain the strong fluctuation in the ratings. Usually the more people vote / rate a movie the "score" tends to even out but since it can be considered as a niche movies category less people are inclined to vote.
# 
# Taking a closer look at the Long bin, we notice that the perfect movie length nowadays would probably be between 120 & 150 minutes.
```

```{r}
# Runtime_lenght_bins_df |>
#   select(runtime_bins,year,gross_CPI_adjusted,rating) |>
#   group_by(runtime_bins,year) |>
#   summarise(AVG_gross = mean(gross_CPI_adjusted, na.rm = T), .groups = "keep") |>
#   #summarise(AVG_gross = mean(gross_CPI_adjusted, na.rm = T), .groups = "keep") |>
#   filter(AVG_gross>=0) |>
#   ggplot(aes( x = year , y = AVG_gross)) +
#   geom_point(aes(shape = runtime_bins, color = runtime_bins))+
#   geom_line(aes(color = runtime_bins), se =FALSE) +
#   labs(title = "Taking a closer look on movies with lenght 100-180min",
#        subtitle = "Safe bet would be arround 130min, it has the lowest standard error",
#        x = "Year",
#        y = "Average Gross",
#        color = "Runtime",
#        shape = "Runtime") +
#   annotate("text",x = 1970, y = 7e+08, vjust = "top", hjust = "center", label = "Correlation between lenght & gross volatility
#            seem to play a role for movies" ) +
#   coord_cartesian(xlim = c(1915,2025), ylim = c(0,5e+08)) +
#   scale_x_continuous(breaks = seq(1915,2025,6)) +
#   theme(axis.text.x = element_text(angle = 45, hjust=1),
#         legend.position = "bottom")
```

## Certificate Section

certificate / genre / gross ?? For which cert is the most appropriate gross wise / rating wise / ...

```{r Analysis : Certificate}
movies |> 
  select(certificate_adjusted , genre , gross_CPI_adjusted , rating ) |>
  filter(!is.na(certificate_adjusted)) |>
  mutate(as.factor(certificate_adjusted)) |>
  filter(genre == "Action" | genre == "Animation" | genre=="Comedy"|
         genre == "Horror"|genre == "Sci-Fi" | genre =="Thriller" ) |>
  group_by(certificate_adjusted , genre) |>
  summarise(Total_gross = sum(gross_CPI_adjusted , na.rm = T ),
            .groups = "keep") |> 
  ggplot(aes( x = genre , y = Total_gross )) + 
    geom_bar(aes(x = genre, fill = factor(certificate_adjusted)),
            position = "dodge",
            stat = "identity") + 
    labs( 
        title = "Certificates for certain genres play a key role for movie credibility.",
        subtitle = "For Horror a certificate around 16+ years is adequate to maximise profits.",
        x = "Genre",
        y = "Total gross by certificate",
        fill = "Certificate")

```
A more detailed examination of specific genres reveals the considerable impact of certificate labels on film success. It becomes evident that a deep understanding of your target audience is paramount when creating movies in particular genres. Some genres are markedly influenced by age labels, not only affecting box office earnings but also shaping audience preferences, particularly in the genres of Action, Horror, Sci-Fi, and Thriller.

In the case of Action films carrying a minimum age label of 12-13, audience expectations gravitate towards more intense and high-quality action sequences, which can serve as a pivotal incentive for individuals to visit movie theaters. Conversely, a movie labeled for all ages (minimum age 0) may not instill the same level of credibility in genres such as Thriller or Action, potentially dissuading audience turnout.

A parallel pattern emerges in the Sci-Fi genre, where a certificate denoting an age range of around 12 years sets the stage for the anticipation of more mature and serious thematic elements. For Horror and Thriller genres, the certificates that yield the most substantial box office returns typically fall within the 16-18 age bracket.

Conversely, age categories spanning from 0 to 7 appear to align seamlessly with the Comedy genre, creating a harmonious fit within a family-friendly environment.

In summation, it becomes apparent that a profound comprehension of the target audience is especially pivotal when crafting films within specific genres. This understanding serves as a fundamental key to unlocking the potential for producing a successful movie, as age certificates significantly shape audience expectations and preferences within various cinematic categories.

<!-- Taking a closer look to a few genres that benefit most from certificate labels. -->
<!-- It is important to know your target audience when doing a movie in certain genres. Some genres benefit more than others from a certain certificate. Furthermore, age labels plays quite a role in gross earnings but also in impact audience arrivals, especially in categories like Action / Horror or Sci-Fi. -->
<!-- For Action movies with a label of 12-13 as minimum age, the audience expects more brutal or quality action sequences & it could be a driving factor for people to go to movie theater. In contrast if the minimum age was 0, then the audience would probably not think that this movie is credible in certain genres like Thriller or Action & thus maybe not show up in movie theaters. -->
<!-- Same could be said for Sci-Fi, with labels around 12 years, people would expect more mature / serious themes. As for Horror & Thriller the certificate that generate the most gross is 16-18 years old. -->
<!-- Age categories between 0-7 seem to suit Comedy well as it fits perfectly in a family environment. -->

<!-- To conclude, knowing your target audience is especially important when doing films in certain genres & can be one of the keys for producing a successful movie. -->
```{r}
# movies |> 
#   select(certificate,genre,gross_CPI_adjusted,rating,votes) |>
#   
#   group_by(certificate,genre) |>
#   summarise(Big_rating = mean(rating,na.rm = T )) |> # counts the number of movies that got a gross bigger than 2M
#   filter(!is.na(certificate)) |>
#   ggplot(aes( x = genre , y = Big_rating )) + 
#   geom_bar(aes(x = genre, fill = certificate), position = "dodge", stat = "identity")
  
```

```{r}
movies |> 
  select(title , rating , directors , dob_directors , studio , profit_CPI_adjusted ) |>
  distinct(directors, .keep_all = TRUE ) |>
  filter( rating != is.na(rating) & profit_CPI_adjusted != is.na(profit_CPI_adjusted)) |>
  group_by(directors) |>
  summarise( avg_rating = mean(rating),
             avg_profit = mean(profit_CPI_adjusted)) |>
  ggplot(aes( x = avg_rating , y = avg_profit)) +
  geom_point() +
  geom_smooth() 
```

